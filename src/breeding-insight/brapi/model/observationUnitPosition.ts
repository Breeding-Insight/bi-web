/**
 * BrAPI-Phenotyping
 * The Breeding API (BrAPI) is a Standardized REST ful Web Service API Specification for communicating Plant Breeding Data. BrAPI allows for easy data sharing between databases and tools involved in plant breeding. <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">General Reference Documentation</h2> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/URL_Structure.md\">URL Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Response_Structure.md\">Response Structure</a></div> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Date_Time_Encoding.md\">Date/Time Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Location_Encoding.md\">Location Encoding</a></div> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Error_Handling.md\">Error Handling</a></div> <div class=\"gen-info-link\"><a href=\"https://github.com/plantbreeding/API/blob/master/Specification/GeneralInfo/Search_Services.md\">Search Services</a></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Core</h2> <div class=\"brapi-section-description\">The BrAPI Core module contains high level entities used for organization and management. This includes Programs, Trials, Studies, Locations, People, and Lists</div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/master/Specification/BrAPI-Core\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Core\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapicore.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"current-brapi-section brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Phenotyping</h2> <div class=\"brapi-section-description\">The BrAPI Phenotyping module contains entities related to phenotypic observations. This includes Observation Units, Observations, Observation Variables, Traits, Scales, Methods, and Images</div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/master/Specification/BrAPI-Phenotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Phenotyping\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapiphenotyping.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Genotyping</h2> <div class=\"brapi-section-description\">The BrAPI Genotyping module contains entities related to genotyping analysis. This includes Samples, Markers, Variant Sets, Variants, Call Sets, Calls, References, Reads, and Vendor Orders</div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/master/Specification/BrAPI-Genotyping\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Genotyping\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigenotyping.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <div class=\"brapi-section\"> <h2 class=\"brapi-section-title\">BrAPI Germplasm</h2> <div class=\"brapi-section-description\">The BrAPI Germplasm module contains entities related to germplasm management. This includes Germplasm, Germplasm Attributes, Seed Lots, Crosses, Pedigree, and Progeny</div> <div class=\"version-number\">V2.0</div> <div class=\"link-btn\"><a href=\"https://github.com/plantbreeding/API/tree/master/Specification/BrAPI-Germplasm\">GitHub</a></div> <div class=\"link-btn\"><a href=\"https://app.swaggerhub.com/apis/PlantBreedingAPI/BrAPI-Germplasm\">SwaggerHub</a></div> <div class=\"link-btn\"><a href=\"https://brapigermplasm.docs.apiary.io\">Apiary</a></div> <div class=\"stop-float\"></div> </div>  <style> .link-btn{ float: left;  margin: 2px 10px 0 0;  padding: 0 5px;  border-radius: 5px;  background-color: #ddd; } .stop-float{   clear: both; } .version-number{   float: left;    margin: 5px 10px 0 5px; } .brapi-section-title{   margin: 0 10px 0 0;   font-size: 20px; } .current-brapi-section{   font-weight: bolder;   border-radius: 5px;    background-color: #ddd; } .brapi-section{   padding: 5px 5px;  } .brapi-section-description{   margin: 5px 0 0 5px; } </style>
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { GeoJSON } from './geoJSON';
import { ObservationUnitLevelRelationship } from './observationUnitLevelRelationship';

/**
 * All positional and layout information related to this Observation Unit  MIAPPE V1.1 (DM-73) Spatial distribution - Type and value of a spatial coordinate (georeference or relative) or level of observation (plot 45, subblock 7, block 2) provided as a key-value pair of the form type:value. Levels of observation must be consistent with those listed in the Study section.
 */
export interface ObservationUnitPosition { 
    /**
     * The type of entry for this observation unit. ex. \"CHECK\", \"TEST\", \"FILLER\"
     */
    entryType?: ObservationUnitPosition.EntryTypeEnum;
    geoCoordinates?: GeoJSON;
    observationLevel?: ObservationUnitLevelRelationship & any;
    /**
     * Observation levels indicate the granularity level at which the measurements are taken.   `levelName` defines the level   `levelOrder` defines where that level exists in the hierarchy of levels. `levelOrder`s lower numbers are at the top of the hierarchy (ie field > 0) and higher numbers are at the bottom of the hierarchy (ie plant > 6).   `levelCode` is an ID code for this level tag. Identify this observation unit by each level of the hierarchy where it exists
     */
    observationLevelRelationships?: Array<ObservationUnitLevelRelationship>;
    /**
     * The X position coordinate for an observation unit. Different systems may use different coordinate systems.
     */
    positionCoordinateX?: string;
    /**
     * The type of positional coordinate used. Must be one of the following values  LONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details  LATITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details  PLANTED_ROW - The physical planted row number   PLANTED_INDIVIDUAL - The physical counted number, could be independant or within a planted row  GRID_ROW - The row index number of a square grid overlay  GRID_COL - The column index number of a square grid overlay  MEASURED_ROW - The distance in meters from a defined 0-th row  MEASURED_COL - The distance in meters from a defined 0-th column
     */
    positionCoordinateXType?: ObservationUnitPosition.PositionCoordinateXTypeEnum;
    /**
     * The Y position coordinate for an observation unit. Different systems may use different coordinate systems.
     */
    positionCoordinateY?: string;
    /**
     * The type of positional coordinate used. Must be one of the following values  LONGITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details  LATITUDE - ISO 6709 standard, WGS84 geodetic datum. See 'Location Coordinate Encoding' for details  PLANTED_ROW - The physical planted row number   PLANTED_INDIVIDUAL - The physical counted number, could be independant or within a planted row  GRID_ROW - The row index number of a square grid overlay  GRID_COL - The column index number of a square grid overlay  MEASURED_ROW - The distance in meters from a defined 0-th row  MEASURED_COL - The distance in meters from a defined 0-th column
     */
    positionCoordinateYType?: ObservationUnitPosition.PositionCoordinateYTypeEnum;
}
export namespace ObservationUnitPosition {
    export type EntryTypeEnum = 'CHECK' | 'TEST' | 'FILLER';
    export const EntryTypeEnum = {
        CHECK: 'CHECK' as EntryTypeEnum,
        TEST: 'TEST' as EntryTypeEnum,
        FILLER: 'FILLER' as EntryTypeEnum
    };
    export type PositionCoordinateXTypeEnum = 'LONGITUDE' | 'LATITUDE' | 'PLANTED_ROW' | 'PLANTED_INDIVIDUAL' | 'GRID_ROW' | 'GRID_COL' | 'MEASURED_ROW' | 'MEASURED_COL';
    export const PositionCoordinateXTypeEnum = {
        LONGITUDE: 'LONGITUDE' as PositionCoordinateXTypeEnum,
        LATITUDE: 'LATITUDE' as PositionCoordinateXTypeEnum,
        PLANTEDROW: 'PLANTED_ROW' as PositionCoordinateXTypeEnum,
        PLANTEDINDIVIDUAL: 'PLANTED_INDIVIDUAL' as PositionCoordinateXTypeEnum,
        GRIDROW: 'GRID_ROW' as PositionCoordinateXTypeEnum,
        GRIDCOL: 'GRID_COL' as PositionCoordinateXTypeEnum,
        MEASUREDROW: 'MEASURED_ROW' as PositionCoordinateXTypeEnum,
        MEASUREDCOL: 'MEASURED_COL' as PositionCoordinateXTypeEnum
    };
    export type PositionCoordinateYTypeEnum = 'LONGITUDE' | 'LATITUDE' | 'PLANTED_ROW' | 'PLANTED_INDIVIDUAL' | 'GRID_ROW' | 'GRID_COL' | 'MEASURED_ROW' | 'MEASURED_COL';
    export const PositionCoordinateYTypeEnum = {
        LONGITUDE: 'LONGITUDE' as PositionCoordinateYTypeEnum,
        LATITUDE: 'LATITUDE' as PositionCoordinateYTypeEnum,
        PLANTEDROW: 'PLANTED_ROW' as PositionCoordinateYTypeEnum,
        PLANTEDINDIVIDUAL: 'PLANTED_INDIVIDUAL' as PositionCoordinateYTypeEnum,
        GRIDROW: 'GRID_ROW' as PositionCoordinateYTypeEnum,
        GRIDCOL: 'GRID_COL' as PositionCoordinateYTypeEnum,
        MEASUREDROW: 'MEASURED_ROW' as PositionCoordinateYTypeEnum,
        MEASUREDCOL: 'MEASURED_COL' as PositionCoordinateYTypeEnum
    };
}